<?xml version="1.0" encoding="iso-8859-1"?>
<?xml-stylesheet type='text/xsl' href='../rev-2002/issuelist.xslt' ?>
<!-- anybody want to write a DTD?  go for it.
<DOCTYPE issuelist SYSTEM "issuelist.dtd">
 -->
<issuelist>
<title>URI Test Cases and Implementation Reports</title>

<links>
 <li><a href="../rev-2002/issues.html">URI Issues</a></li>
 <li>URI draft:
       <a href="../rev-2002/draft-fielding-uri-rfc2396bis-06.txt">06.txt</a>,
       <a href="../rev-2002/draft-fielding-uri-rfc2396bis-06.html">06.html</a></li>
 <li><a href="../rfc/rfc2396.html">RFC 2396</a></li>
</links>
<summary>
 <section>
  <title>Test Cases</title>
  <status>verified</status>
  <status>unverified</status>
 </section>
 <section>
  <title>Tested Implementations</title>
  <status>compliant</status>
  <status>conditionally-compliant</status>
  <status>non-compliant</status>
 </section>
</summary>

<issue>
 <type>relative</type>
 <name>examples-in-spec</name>
 <title>relative parsing examples in section 5.4 of URI</title>
 <status>verified</status>
 <report>
  <author email="fielding_AT_gbiv.com">Roy T. Fielding</author>
  <date sort="20040419">19 Apr 2004</date>
  <where><a href="rel_examples1.html">rel_examples1</a></where>
<pre>
The examples provided in the specification (section 5.4) use a base
URI of "http://a/b/c/d;p?q" and should be consistent with almost all
implementations.  A <a href="rel_examples1.html">rel_examples1
Test Page</a> is provided for visual testing.  Note that this is only
a test of the URI reference parser and conversion to absolute form.
</pre>
 </report>
 <report>
  <author email="duerst_AT_w3.org">Martin Duerst</author>
  <date sort="20040420">20 Apr 2004</date>
  <where><a href="http://www.w3.org/2004/04/uri-rel-test.html">uri-rel-test.html</a></where>
<pre>
I have created a testing page at <a href="http://www.w3.org/2004/04/uri-rel-test.html">http://www.w3.org/2004/04/uri-rel-test.html</a>
to make (manual) testing of the implementations in various browsers easy.
</pre>
 </report>
</issue>

<issue>
 <type>percent-encoding</type>
 <name>percent-encoded-reg-name</name>
 <title>test if %hh is processed correctly in reg-name</title>
 <status>unverified</status>
 <report>
  <author email="duerst_AT_w3.org">Martin Duerst</author>
  <date sort="20040427">27 Apr 2004</date>
  <where><a href="http://www.w3.org/2004/04/uri-rel-test.html#reg-percent">W3C reg-percent</a></where>
<pre>
I have added some more tests to my page at

   <a href="http://www.w3.org/2004/04/uri-rel-test.html#reg-percent">http://www.w3.org/2004/04/uri-rel-test.html#reg-percent</a>

What they test is whether %hh in reg-name is dealt with according
to the spec. There are two parts, one for cases that correspond
to US-ASCII only, and the other for cases that correspond to IDN.
</pre>
 </report>
</issue>

<issue>
 <type>implementation</type>
 <name>uri_test.pl</name>
 <title>Roy's example URI reference parser</title>
 <status>compliant</status>
 <report>
  <author email="fielding_AT_gbiv.com">Roy T. Fielding</author>
  <date sort="20040419">19 Apr 2004</date>
  <where><a href="../rev-2002/uri_test.pl">uri_test.pl</a></where>
<pre>
This simple perl script was used by Roy to test the algorithms described
within the specification.  Usage:

  cat list-of-URI-refs.txt | perl uri_test.pl "base-URI"

Here are examples of its <a href="../rev-2002/example_uri_refs.txt">input</a> and <a href="../rev-2002/example_uri_refs.out">output</a> when given the
base URI of "http://a/b/c/d;p?q".
</pre>
 </report>
</issue>

<issue>
 <type>implementation</type>
 <name>Safari</name>
 <title>Apple Safari 1.0.2</title>
 <status>compliant</status>
 <report>
  <author email="fielding_AT_gbiv.com">Roy T. Fielding</author>
  <date sort="20040419">19 Apr 2004</date>
  <where><a href="http://www.apple.com/safari/">Apple Safari site</a></where>
<pre>
Roy tested the URI reference parser on Apple Safari 1.0.2 by simple
observation of the test cases.  The results were consistent with
those of rfc2396bis except in that Safari will add a default path
of "/" to http URIs that have an empty path.  Since that is consistent
with a scheme-specific optimization, Safari 1.0.2 is compliant.
</pre>
 </report>
</issue>

<issue>
 <type>implementation</type>
 <name>Amaya</name>
 <title>W3C Amaya (current CVS)</title>
 <status>non-compliant</status>
 <report>
  <author email="duerst_AT_w3.org">Martin Duerst</author>
  <date sort="20040420">20 Apr 2004</date>
  <where><a href="http://www.w3.org/Amaya/">W3C Amaya</a></where>
<pre>
I have used this page to test Amaya (my version, compiled from CVS
checkout on 2004-01-04). I don't know whether (or to what extent)
processing is done by Amaya or by libwww. Here are the results:

All tests are passed, except the following:

#       rel             correct                 Amaya

6       //g             http://g                http://g/ (additional slash)
7       ?y              http://a/b/c/d;p?y      http://a/b/c/?y (d;p removed)
9       #s              http://a/b/c/d;p?q#s    {testpage URI}#s
15                      http://a/b/c/d;p?q      not tested
43      g.              http://a/b/c/g.         http://a/b/c/g (dot removed)
51      ./../g          http://a/b/g            http://a/b/c/g (/c not removed)
55      g;x=1/./y       http://a/b/c/g;x=1/y    http://a/b/c/g;x=1/./y
                                                        (precedence of ; over /)
56      g;x=1/../y      http://a/b/c/y          http://a/b/c/g;x=1/../y
                                                        (precedence of ; over /)

For test 71, Amaya uses strict parsing.
</pre>
 </report>
</issue>

<issue>
 <type>implementation</type>
 <name>Opera</name>
 <title>Opera (V7.23, build 3227, Win2000)</title>
 <status>non-compliant</status>
 <report>
  <author email="duerst_AT_w3.org">Martin Duerst</author>
  <date sort="20040420">20 Apr 2004</date>
  <where><a href="http://www.w3.org/Amaya/">W3C Amaya</a></where>
<pre>
All tests are passed, except the following:

#       rel             correct                 Amaya

6       //g             http://g                http://g/ (additional slash)
9       #s              http://a/b/c/d;p?q#s    {testpage URI}#s
15                      http://a/b/c/d;p?q      not tested
51      ./../g          http://a/b/g            http://a/b/c/g (/c not removed)

For test 71, Opera uses backwards-compatible parsing.
</pre>
 </report>
</issue>

<issue>
 <type>implementation</type>
 <name>Checklink</name>
 <title>W3C Checklink</title>
 <status>non-compliant</status>
 <report>
  <author email="duerst_AT_w3.org">Martin Duerst</author>
  <date sort="20040420">20 Apr 2004</date>
  <where><a href="http://validator.w3.org/checklink">W3C Checklink</a></where>
<pre>
All tests are passed, except the following:

#       relative        absolute                Link checker

6       //g             http://g                http://g/  (added slash)
7       ?y              http://a/b/c/d;p?y      http://a/b/c/?y  (missing d;p)
31      ../../../g      http://a/g              http://a/../g    (leftover ../)
32      ../../../../g   http://a/g              http://a/../../g (leftover ./../)
41      /./g            http://a/g              http://a/./g     (leftover ./)
51      ./../g          http://a/b/g            http://a/b/c/g   (leftover c/)

For test 71, the link checker uses strict parsing.
</pre>
 </report>
</issue>

<issue>
 <type>implementation</type>
 <name>Firefox</name>
 <title>Mozilla Firefox 0.8, Win XP</title>
 <status>non-compliant</status>
 <report>
  <author email="distobj_AT_acm.org">Mark Baker</author>
  <date sort="20040420">20 Apr 2004</date>
  <where><a href="http://www.mozilla.org/">Mozilla Firefox</a></where>
<pre>
#       rel             correct                 Firefox 0.8

6       //g             http://g                http://g/
15                      http://a/b/c/d;p?q      not testable
51      ./../g          http://a/b/g            http://a/b/c/g
71	http:g					http://a/b/c/g
</pre>
 </report>
</issue>

<issue>
 <type>implementation</type>
 <name>HaskellUtils</name>
 <title>Graham Klyne's Haskell Utils</title>
 <status>compliant</status>
 <report>
  <author email="GK_AT_ninebynine.org">Graham Klyne</author>
  <date sort="20040420">20 Apr 2004</date>
  <where><a href="http://www.ninebynine.org/Software/HaskellUtils/Network/URITestDescriptions.html">HaskellUtils</a></where>
<pre>
passes all tests.
</pre>
 </report>
</issue>

<issue>
 <type>implementation</type>
 <name>SAP Enterprise Portal</name>
 <title>SAP Enterprise Portal</title>
 <status>non-compliant</status>
 <report>
  <author email="stefan.eissingAT_greenbytes.de">Graham Klyne</author>
  <date sort="2004042r30">20 Apr 2004</date>
<pre>
rel		correct			SAP EP KM

?y        http://a/b/c/d;p?y      http://a/b/c/?y
http:g    http:g                  http://a/b/c/g
http:     http:                   not accepted as vaid URI or URI Reference
</pre>
 </report>
</issue>

<issue>
 <type>implementation</type>
 <name>Acrobat</name>
 <title>Adobe Acrobat 6.01 web capture</title>
 <status>compliant</status>
 <report>
  <author email="lmm_AT_acm.org">Graham Klyne</author>
  <date sort="20040429">29 Apr 2004</date>
  <where><a href="http://www.adobe.com/">http://www.adobe.com/</a></where>
<pre>
Adobe Acrobat 6.01 'web capture' on 

 <a href="http://gbiv.com/protocols/uri/test/rel_examples1.html">http://gbiv.com/protocols/uri/test/rel_examples1.html</a>

produces a PDF file with URIs that agree with [R] except:

   http:g   http://a/b/c/g          (ok for compat.)
   http:    http://a/b/c/d;p?q      (ok for compat.)

   /./g     http://a/./g            [X]
   /../g    http://a/../g           [X]

Note RFC2396bis [R] and RFC2396 [X] agree except in three
test cases:   ?y,  /./g,  /../g.
</pre>
 </report>
</issue>

</issuelist>
